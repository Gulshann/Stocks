#pragma checksum "C:\Hackathon-Onmobile\StocksApp\Views\Stocks\Graph.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6615f70ec3a68d19ff89463d36c4a3968ad82258"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Stocks_Graph), @"mvc.1.0.view", @"/Views/Stocks/Graph.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Hackathon-Onmobile\StocksApp\Views\_ViewImports.cshtml"
using StocksApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Hackathon-Onmobile\StocksApp\Views\_ViewImports.cshtml"
using StocksApp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6615f70ec3a68d19ff89463d36c4a3968ad82258", @"/Views/Stocks/Graph.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a421b6ee63e8df0399751ec01a62a64ca849ec31", @"/Views/_ViewImports.cshtml")]
    public class Views_Stocks_Graph : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<StocksApp.ViewModels.GraphViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("    <style>\r\n        #chartdiv {\r\n            width: 100%;\r\n            height: 450px;\r\n        }\r\n    </style>\r\n");
            WriteLiteral("    <!-- Resources -->\r\n    <script src=\"https://cdn.amcharts.com/lib/5/index.js\"></script>\r\n    <script src=\"https://cdn.amcharts.com/lib/5/xy.js\"></script>\r\n    <script src=\"https://cdn.amcharts.com/lib/5/themes/Animated.js\"></script>\r\n");
            WriteLiteral(@"    <!-- Chart code -->
    <script>
        am5.ready(function () {

            var data = [];
            var hiddenDiv = $(""#hidden-graph-div"");
            $('#hidden-graph-div').children('div').each(function () {

                var text = this.innerHTML.split('=');
                var date1 = new Date(text[0].replace(/(\d{2})-(\d{2})-(\d{4})/, ""$2/$1/$3""));
                var value1 = text[1];
                data.push({
                    date: date1.getTime(),
                    value: value1
                    });
            });
            

            // Create root element
            // https://www.amcharts.com/docs/v5/getting-started/#Root_element
            var root = am5.Root.new(""chartdiv"");

            // Set themes
            // https://www.amcharts.com/docs/v5/concepts/themes/
            root.setThemes([
                am5themes_Animated.new(root)
            ]);

            root.dateFormatter.setAll({
                dateFields: [""valueX""]
     ");
            WriteLiteral(@"       });

            // Create chart
            // https://www.amcharts.com/docs/v5/charts/xy-chart/
            var chart = root.container.children.push(
                am5xy.XYChart.new(root, {
                    focusable: true,
                    panX: true,
                    panY: true,
                    wheelX: ""panX"",
                    wheelY: ""zoomX"",
                    pinchZoomX: true
                })
            );

            // Create line series and related axes
            var xAxis2 = chart.xAxes.push(
                am5xy.DateAxis.new(root, {
                    maxDeviation: 0.1,
                    baseInterval: { timeUnit: ""day"", count: 1 },
                    renderer: am5xy.AxisRendererX.new(root, {
                        minGridDistance: 50
                    })
                })
            );

            var yAxis2 = chart.yAxes.push(
                am5xy.ValueAxis.new(root, {
                    maxDeviation: 0.1,
                 ");
            WriteLiteral("   renderer: am5xy.AxisRendererY.new(root, {}),\r\n                    min: 0,\r\n                    max: ");
#nullable restore
#line 81 "C:\Hackathon-Onmobile\StocksApp\Views\Stocks\Graph.cshtml"
                    Write(Model.maxAxis);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"+100,
                })
            );

            var series1 = chart.series.push(
                am5xy.LineSeries.new(root, {
                    xAxis: xAxis2,
                    yAxis: yAxis2,
                    valueYField: ""value"",
                    valueXField: ""date"",
                    tooltip: am5.Tooltip.new(root, {
                        pointerOrientation: ""horizontal"",
                        labelText: ""{valueY}""
                    })
                })
            );

            series1.strokes.template.setAll({
                strokeWidth: 2
            });

            series1.data.setAll(generateDailyData());

            // Create column series and related axes

            var series2 = chart.series.unshift(
                am5xy.ColumnSeries.new(root, {
                    xAxis: xAxis2,
                    yAxis: yAxis2,
                    valueYField: ""value"",
                    valueXField: ""date"",
                    tooltip: am5.Tooltip.ne");
            WriteLiteral(@"w(root, {
                        pointerOrientation: ""horizontal"",
                        labelText: ""{valueY}""
                    })
                })
            );

            series2.data.setAll(generateDailyData());

            // Add cursor
            // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/
            var cursor = chart.set(""cursor"", am5xy.XYCursor.new(root, {
                xAxis: xAxis2
            }));
            cursor.lineY.set(""visible"", false);


            // Make stuff animate on load
            // https://www.amcharts.com/docs/v5/concepts/animations/
            series1.appear(100, 10);
            series2.appear(100, 10);
            chart.appear(100, 10);

            // Functions to generate random data
            function generateDailyData() {
                //var firstDate = new Date();
                //firstDate.setDate(firstDate.getDate() - 7);
                //firstDate.setHours(0, 0, 0, 0);
                //var data = []");
            WriteLiteral(@";
                //for (var i = 0; i < 10; i++) {
                //    var newDate = new Date(firstDate);
                //    newDate.setDate(newDate.getDate() + i);
                //    data.push({
                //        date: newDate.getTime(),
                //        value: i*10
                //    });
                //}
                console.log(data);
                return data;

            }

        }); // end am5.ready()
    </script>
");
            WriteLiteral("    <!-- HTML -->\r\n    <div id=\"chartdiv\"></div>\r\n    <div id=\"hidden-graph-div\" style=\"display:none;\">\r\n");
#nullable restore
#line 160 "C:\Hackathon-Onmobile\StocksApp\Views\Stocks\Graph.cshtml"
         foreach(var item in Model.stockPrice)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <div>");
#nullable restore
#line 162 "C:\Hackathon-Onmobile\StocksApp\Views\Stocks\Graph.cshtml"
                Write(item.Key);

#line default
#line hidden
#nullable disable
            WriteLiteral("=");
#nullable restore
#line 162 "C:\Hackathon-Onmobile\StocksApp\Views\Stocks\Graph.cshtml"
                          Write(item.Value);

#line default
#line hidden
#nullable disable
            WriteLiteral("</div>\r\n");
#nullable restore
#line 163 "C:\Hackathon-Onmobile\StocksApp\Views\Stocks\Graph.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("    </div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<StocksApp.ViewModels.GraphViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
